--  https://www.postgresql.org/docs/current/app-psql.html#APP-PSQL-PROMPTING
--    %M : The full host name (with domain name) of the database server.
--    %n : The database session user name.
--    %/ : The name of the current database.
--    %# : If the session user is a database superuser, then a `#`, otherwise a `>`.
--    %R
--      In PROMPT1:
--        = normally
--        ^ if in single-line mode
--        ! if the session is disconnected from the database
--      In PROMPT2:
--        the sequence is replaced by -, *, a single quote, a double quote,
--        or a dollar sign, depending on whether psql expects more input
--        because the command wasn't terminated yet
--    %x : Transaction status
--        an empty string when not in a transaction block
--        `*` when in a transaction block
--        `!` when in a failed transaction block
--        `?` when the transaction state is indeterminate
--    %l : The line number inside the current statement.
--    %[ ... %] : Contain terminal control characters.
--            %[.......%]      %[..........%]  %[.......%]
\set PROMPT1 '%[%033[1m%]%M %n@%[%033[1;32m%]%/%[%033[0m%]%R%# '
--                       .. ..               ..           ....
\set PROMPT2 '[more] %R > '

\set HISTFILE ~/.psql/history- :DBNAME

-- HISTCONTROL
--    ignorespace: lines which begin with a space are not entered into the history list
--    ignoredups: lines matching the previous history line are not entered
--    ignoreboth: ignorespace + ignoredups
--    none
\set HISTCONTROL ignoredups

\set HISTSIZE 2000

-- COMP_KEYWORD_CASE: Determines which letter case to use when completing an SQL key word.
--    lower/upper: completed word will be in lower or upper case
--    preserve-lower/preserve-upper: the completed word will be in the case of the word already entered,
--                                   but words being completed without anything entered will be in lower or upper case
\set COMP_KEYWORD_CASE upper

-- ON_ERROR_ROLLBACK: Whether or not to continue the transaction in case of an error.
-- Values: on, interactive, off
\set ON_ERROR_ROLLBACK interactive

\set VERBOSITY verbose
\set ECHO queries
-- \set QUIET 0

\pset null '(null)'

-- on / off / always
\pset pager off

\pset border 2

-- on / off / auto
\pset expanded auto

-- aligned / asciidoc / csv / html / latex / latex-longtable / troff-ms / unaligned / wrapped
\pset format aligned

-- ascii / old-ascii / unicode
\pset linestyle unicode

\pset unicode_border_linestyle double
\pset unicode_column_linestyle single
\pset unicode_header_linestyle single

-- Turns displaying of how long each SQL statement takes on.
\timing

\set clear '\\! clear;'

\set conn_uptime 'SELECT now() - backend_start AS uptime FROM pg_stat_activity where pid = pg_backend_pid();'
\set conn_count 'SELECT usename, count(*) AS connections FROM pg_stat_activity group by usename ORDER BY connections DESC;'
\set conn_all 'SELECT usename, backend_start AS from, now() - backend_start AS uptime FROM pg_stat_activity ORDER BY uptime DESC;'

\set db_size 'SELECT datname AS dbname, pg_size_pretty(pg_database_size(datname)) AS size FROM pg_database ORDER BY pg_database_size(datname) DESC;'
\set db_tablesize 'SELECT tablename AS table, pg_size_pretty(pg_total_relation_size(tablename)) AS total_size, pg_size_pretty(pg_table_size(tablename)) AS size_without_indexes, pg_size_pretty(pg_indexes_size(tablename)) AS indexes_size FROM (SELECT tablename::regclass FROM pg_tables where schemaname = ''public'') AS tablename ORDER BY pg_total_relation_size(tablename) DESC;'
\set db_seqscans 'SELECT relname AS table, seq_scan AS seq_scans FROM pg_stat_user_tables ORDER BY seq_scan DESC;'

\set query_stats 'SELECT total_time AS total, (total_time / calls) AS average, query FROM pg_stat_statements ORDER BY average DESC LIMIT 100;'
\set query_activity 'SELECT datname, pid, usename, query, state FROM pg_stat_activity ORDER BY datname, usename;'
\set query_blocking 'SELECT pid, usename, pg_blocking_pids(pid) AS blockers, now() - query_start AS duration, query AS blockedQuery FROM pg_stat_activity WHERE cardinality(pg_blocking_pids(pid)) > 0;'

\set server_settings 'SELECT name, setting, unit, context FROM pg_settings;'
\set server_uptime 'SELECT now() - pg_postmaster_start_time() AS uptime;'

-- pg_stat_activity
-- pg_statio_user_tables
-- pg_stat_statements
-- pg_stat_user_tables
-- pg_database
-- pg_catalog
-- pg_class
-- shared_preload_libraries = 'pg_stat_statements, auto_explain'
