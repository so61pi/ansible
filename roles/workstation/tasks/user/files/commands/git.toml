[[snippets]]
  description = "config user name & email"
  command = "git config --global user.name {username} && git config --global user.email {email}"
  tag = []
  output = ""

[[snippets]]
  description = "disable ssl verification"
  command = "git config --global http.sslVerify false"
  tag = []
  output = ""

[[snippets]]
  description = "set http proxy"
  command = "git config --global http.proxy http://proxy:port"
  tag = []
  output = ""

[[snippets]]
  description = "unset setting"
  command = "git config --global --unset http.proxy"
  tag = []
  output = ""

[[snippets]]
  description = "list all config"
  command = "git config -l"
  tag = []
  output = ""

[[snippets]]
  description = "initialize a repository"
  command = "git init"
  tag = []
  output = ""

[[snippets]]
  description = "clone a repository"
  command = "git clone --recurse-submodules {url}"
  tag = []
  output = ""

[[snippets]]
  description = "add all modified or new files"
  command = "git add -A"
  tag = []
  output = ""

[[snippets]]
  description = "show status"
  command = "git status"
  tag = []
  output = ""

[[snippets]]
  description = "commit"
  command = "git commit -m 'message'"
  tag = []
  output = ""

[[snippets]]
  description = "amend last commit"
  command = "git commit --amend -m 'message'"
  tag = []
  output = ""

[[snippets]]
  description = "amend last commit without changing message"
  command = "git commit --amend --no-edit"
  tag = []
  output = ""

[[snippets]]
  description = "add files and commit"
  command = "git commit --all -m 'message'"
  tag = []
  output = ""

[[snippets]]
  description = "pull changes"
  command = "git pull"
  tag = []
  output = ""

[[snippets]]
  description = "pull changes and rebase local changes on top"
  command = "git pull --rebase --autostash"
  tag = []
  output = ""

[[snippets]]
  description = "execute pull in a directory"
  command = "git -C {directory} pull"
  tag = []
  output = ""

[[snippets]]
  description = "push changes"
  command = "git push"
  tag = []
  output = ""

[[snippets]]
  description = "soft reset to a commit"
  command = "git reset --soft {commit}"
  tag = []
  output = ""

[[snippets]]
  description = "hard reset to a commit"
  command = "git reset --hard {commit}"
  tag = []
  output = ""

[[snippets]]
  description = "group 5 nearest commits together"
  command = "git reset --soft HEAD~5 && git commit -m 'message'"
  tag = []
  output = ""

[[snippets]]
  description = "search for files"
  command = "git ls-files | grep {pattern}"
  tag = []
  output = ""

[[snippets]]
  description = "list local branches"
  command = "git branch"
  tag = []
  output = ""

[[snippets]]
  description = "list remote-tracking branches and local branches"
  command = "git branch -a"
  tag = []
  output = ""

[[snippets]]
  description = "list remote-tracking branches"
  command = "git branch -r"
  tag = []
  output = ""

[[snippets]]
  description = "remove/delete a branch"
  command = "git branch -d {name=bugfix}"
  tag = []
  output = ""

[[snippets]]
  description = "force remove/delete a branch"
  command = "git branch -D {name=bugfix}"
  tag = []
  output = ""

[[snippets]]
  description = "rename branch"
  command = "git branch -m old new"
  tag = []
  output = ""

[[snippets]]
  description = "filter branches"
  command = "git branch -l 'feature/*'"
  tag = []
  output = ""

[[snippets]]
  description = "mark a file as removed/deleted"
  command = "git rm -- file"
  tag = []
  output = ""

[[snippets]]
  description = "mark a directory as removed/deleted"
  command = "git rm -r -- directory"
  tag = []
  output = ""

[[snippets]]
  description = "reset content of a file"
  command = "git checkout -- file"
  tag = []
  output = ""

[[snippets]]
  description = "switch to a branch"
  command = "git checkout master"
  tag = []
  output = ""

[[snippets]]
  description = "create and switch to a new branch"
  command = "git checkout -b bugfix"
  tag = []
  output = ""

[[snippets]]
  description = "view changes relative to the staging area"
  command = "git diff"
  tag = []
  output = ""

[[snippets]]
  description = "create diff file"
  command = "git diff > patch.diff"
  tag = []
  output = ""

[[snippets]]
  description = "apply diff file"
  command = "git apply patch.diff"
  tag = []
  output = ""

[[snippets]]
  description = "view changes relative to the staging area of a specific file"
  command = "git diff -- file"
  tag = []
  output = ""

[[snippets]]
  description = "view changes of the staging area"
  command = "git diff --staged"
  tag = []
  output = ""

[[snippets]]
  description = "view changes of a file between commits"
  command = "git diff HEAD~3 HEAD -- file"
  tag = []
  output = ""

[[snippets]]
  description = "view changes relative to the staging area"
  command = "git difftool"
  tag = []
  output = ""

[[snippets]]
  description = "view changes of the staging area"
  command = "git difftool --staged"
  tag = []
  output = ""

[[snippets]]
  description = "display commit log"
  command = "git log --graph"
  tag = []
  output = ""

[[snippets]]
  description = "display commit log all branches"
  command = "git log --graph --all"
  tag = []
  output = ""

[[snippets]]
  description = "display commit log with changed files"
  command = "git log --graph --name-status"
  tag = []
  output = ""

[[snippets]]
  description = "display commit log with changed files"
  command = "git log --graph --stat"
  tag = []
  output = ""

[[snippets]]
  description = "search for text in all commits/history"
  command = "git log --source --all -S {text}"
  tag = []
  output = ""

[[snippets]]
  description = "push current changes to temporary stack"
  command = "git stash"
  tag = []
  output = ""

[[snippets]]
  description = "pop changes from temporary stack"
  command = "git stash pop"
  tag = []
  output = ""

[[snippets]]
  description = "drop latest changes from temporary stack"
  command = "git stash drop"
  tag = []
  output = ""

[[snippets]]
  description = "list temporary stack"
  command = "git stash list"
  tag = []
  output = ""

[[snippets]]
  description = "update submodule code"
  command = "git submodule update --recursive"
  tag = []
  output = ""

[[snippets]]
  description = "initialize submodule code"
  command = "git submodule update --recursive --init"
  tag = []
  output = ""

[[snippets]]
  description = "merge branch to current branch"
  command = "git merge {from=bugfix}"
  tag = []
  output = ""

[[snippets]]
  description = "squash merge branch to current branch"
  command = "git merge --squash {from=bugfix}"
  tag = []
  output = ""

[[snippets]]
  description = "reset working directory"
  command = "git clean -xdf"
  tag = []
  output = ""

[[snippets]]
  description = "show reflog"
  command = "git reflog"
  tag = []
  output = ""

[[snippets]]
  description = "start local webserver for curent repository"
  command = "git instaweb"
  tag = []
  output = ""

[[snippets]]
  description = "stop webserver"
  command = "git instaweb stop"
  tag = []
  output = ""

[[snippets]]
  description = "Get hash of current commit"
  command = "git rev-parse --verify HEAD"
  tag = []
  output = ""

[[snippets]]
  description = "Get hash of previous commit"
  command = "git rev-parse --verify HEAD~"
  tag = []
  output = ""
